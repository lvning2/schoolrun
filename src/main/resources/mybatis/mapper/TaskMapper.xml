<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.schoolrun.mapper.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.schoolrun.entity.Task" >
    <id column="tid" property="tid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="utel" property="utel" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="ptel" property="ptel" jdbcType="VARCHAR" />
    <result column="trecom" property="trecom" jdbcType="VARCHAR" />
    <result column="tadress" property="tadress" jdbcType="VARCHAR" />
    <result column="tmain" property="tmain" jdbcType="VARCHAR" />
    <result column="tdemand" property="tdemand" jdbcType="VARCHAR" />
    <result column="tgift" property="tgift" jdbcType="VARCHAR" />
    <result column="teva" property="teva" jdbcType="INTEGER" />
    <result column="tstart" property="tstart" jdbcType="TIMESTAMP" />
    <result column="tend" property="tend" jdbcType="TIMESTAMP" />
    <result column="tcompalin" property="tcompalin" jdbcType="INTEGER" />
    <result column="tstate" property="tstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tid, uid, utel, pid, ptel, trecom, tadress, tmain, tdemand, tgift, teva, tstart, 
    tend, tcompalin, tstate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.schoolrun.entity.TaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from task
    where tid = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where tid = #{tid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.schoolrun.entity.TaskExample" >
    delete from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.schoolrun.entity.Task" >
    insert into task (tid, uid, utel, 
      pid, ptel, trecom, 
      tadress, tmain, tdemand, 
      tgift, teva, tstart, 
      tend, tcompalin, tstate
      )
    values (#{tid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{utel,jdbcType=VARCHAR}, 
      #{pid,jdbcType=INTEGER}, #{ptel,jdbcType=VARCHAR}, #{trecom,jdbcType=VARCHAR}, 
      #{tadress,jdbcType=VARCHAR}, #{tmain,jdbcType=VARCHAR}, #{tdemand,jdbcType=VARCHAR}, 
      #{tgift,jdbcType=VARCHAR}, #{teva,jdbcType=INTEGER}, #{tstart,jdbcType=TIMESTAMP}, 
      #{tend,jdbcType=TIMESTAMP}, #{tcompalin,jdbcType=INTEGER}, #{tstate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.schoolrun.entity.Task" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="utel != null" >
        utel,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="ptel != null" >
        ptel,
      </if>
      <if test="trecom != null" >
        trecom,
      </if>
      <if test="tadress != null" >
        tadress,
      </if>
      <if test="tmain != null" >
        tmain,
      </if>
      <if test="tdemand != null" >
        tdemand,
      </if>
      <if test="tgift != null" >
        tgift,
      </if>
      <if test="teva != null" >
        teva,
      </if>
      <if test="tstart != null" >
        tstart,
      </if>
      <if test="tend != null" >
        tend,
      </if>
      <if test="tcompalin != null" >
        tcompalin,
      </if>
      <if test="tstate != null" >
        tstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="utel != null" >
        #{utel,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="ptel != null" >
        #{ptel,jdbcType=VARCHAR},
      </if>
      <if test="trecom != null" >
        #{trecom,jdbcType=VARCHAR},
      </if>
      <if test="tadress != null" >
        #{tadress,jdbcType=VARCHAR},
      </if>
      <if test="tmain != null" >
        #{tmain,jdbcType=VARCHAR},
      </if>
      <if test="tdemand != null" >
        #{tdemand,jdbcType=VARCHAR},
      </if>
      <if test="tgift != null" >
        #{tgift,jdbcType=VARCHAR},
      </if>
      <if test="teva != null" >
        #{teva,jdbcType=INTEGER},
      </if>
      <if test="tstart != null" >
        #{tstart,jdbcType=TIMESTAMP},
      </if>
      <if test="tend != null" >
        #{tend,jdbcType=TIMESTAMP},
      </if>
      <if test="tcompalin != null" >
        #{tcompalin,jdbcType=INTEGER},
      </if>
      <if test="tstate != null" >
        #{tstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.schoolrun.entity.TaskExample" resultType="java.lang.Integer" >
    select count(*) from task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update task
    <set >
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.utel != null" >
        utel = #{record.utel,jdbcType=VARCHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.ptel != null" >
        ptel = #{record.ptel,jdbcType=VARCHAR},
      </if>
      <if test="record.trecom != null" >
        trecom = #{record.trecom,jdbcType=VARCHAR},
      </if>
      <if test="record.tadress != null" >
        tadress = #{record.tadress,jdbcType=VARCHAR},
      </if>
      <if test="record.tmain != null" >
        tmain = #{record.tmain,jdbcType=VARCHAR},
      </if>
      <if test="record.tdemand != null" >
        tdemand = #{record.tdemand,jdbcType=VARCHAR},
      </if>
      <if test="record.tgift != null" >
        tgift = #{record.tgift,jdbcType=VARCHAR},
      </if>
      <if test="record.teva != null" >
        teva = #{record.teva,jdbcType=INTEGER},
      </if>
      <if test="record.tstart != null" >
        tstart = #{record.tstart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tend != null" >
        tend = #{record.tend,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tcompalin != null" >
        tcompalin = #{record.tcompalin,jdbcType=INTEGER},
      </if>
      <if test="record.tstate != null" >
        tstate = #{record.tstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task
    set tid = #{record.tid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      utel = #{record.utel,jdbcType=VARCHAR},
      pid = #{record.pid,jdbcType=INTEGER},
      ptel = #{record.ptel,jdbcType=VARCHAR},
      trecom = #{record.trecom,jdbcType=VARCHAR},
      tadress = #{record.tadress,jdbcType=VARCHAR},
      tmain = #{record.tmain,jdbcType=VARCHAR},
      tdemand = #{record.tdemand,jdbcType=VARCHAR},
      tgift = #{record.tgift,jdbcType=VARCHAR},
      teva = #{record.teva,jdbcType=INTEGER},
      tstart = #{record.tstart,jdbcType=TIMESTAMP},
      tend = #{record.tend,jdbcType=TIMESTAMP},
      tcompalin = #{record.tcompalin,jdbcType=INTEGER},
      tstate = #{record.tstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.schoolrun.entity.Task" >
    update task
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="utel != null" >
        utel = #{utel,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="ptel != null" >
        ptel = #{ptel,jdbcType=VARCHAR},
      </if>
      <if test="trecom != null" >
        trecom = #{trecom,jdbcType=VARCHAR},
      </if>
      <if test="tadress != null" >
        tadress = #{tadress,jdbcType=VARCHAR},
      </if>
      <if test="tmain != null" >
        tmain = #{tmain,jdbcType=VARCHAR},
      </if>
      <if test="tdemand != null" >
        tdemand = #{tdemand,jdbcType=VARCHAR},
      </if>
      <if test="tgift != null" >
        tgift = #{tgift,jdbcType=VARCHAR},
      </if>
      <if test="teva != null" >
        teva = #{teva,jdbcType=INTEGER},
      </if>
      <if test="tstart != null" >
        tstart = #{tstart,jdbcType=TIMESTAMP},
      </if>
      <if test="tend != null" >
        tend = #{tend,jdbcType=TIMESTAMP},
      </if>
      <if test="tcompalin != null" >
        tcompalin = #{tcompalin,jdbcType=INTEGER},
      </if>
      <if test="tstate != null" >
        tstate = #{tstate,jdbcType=INTEGER},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.schoolrun.entity.Task" >
    update task
    set uid = #{uid,jdbcType=INTEGER},
      utel = #{utel,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      ptel = #{ptel,jdbcType=VARCHAR},
      trecom = #{trecom,jdbcType=VARCHAR},
      tadress = #{tadress,jdbcType=VARCHAR},
      tmain = #{tmain,jdbcType=VARCHAR},
      tdemand = #{tdemand,jdbcType=VARCHAR},
      tgift = #{tgift,jdbcType=VARCHAR},
      teva = #{teva,jdbcType=INTEGER},
      tstart = #{tstart,jdbcType=TIMESTAMP},
      tend = #{tend,jdbcType=TIMESTAMP},
      tcompalin = #{tcompalin,jdbcType=INTEGER},
      tstate = #{tstate,jdbcType=INTEGER}
    where tid = #{tid,jdbcType=INTEGER}
  </update>

  <select id="selectNewest" resultType="com.schoolrun.entity.Task">
    SELECT * FROM task ORDER BY tstart DESC
  </select>
</mapper>